import mujoco._structs

class Simulate:
    droploadrequest: bool
    load_error: str
    measured_slowdown: float
    speed_changed: bool
    def __init__(self) -> None: ...
    def applyforceperturbations(self) -> None: ...
    def applyposepertubations(self, arg0: int) -> None: ...
    def load(self, arg0: str, arg1: mujoco._structs.MjModel, arg2: mujoco._structs.MjData) -> None: ...
    def lock(self) -> SimulateMutex: ...
    def renderloop(self) -> None: ...
    def uiloadrequest_decrement(self) -> None: ...
    @property
    def busywait(self) -> int: ...
    @property
    def ctrlnoiserate(self) -> float: ...
    @property
    def ctrlnoisestd(self) -> float: ...
    @property
    def dropfilename(self) -> str: ...
    @property
    def exitrequest(self) -> bool: ...
    @property
    def filename(self) -> str: ...
    @property
    def real_time_index(self) -> int: ...
    @property
    def refresh_rate(self) -> int: ...
    @property
    def run(self) -> int: ...
    @property
    def uiloadrequest(self) -> int: ...

class SimulateMutex:
    def __init__(self, *args, **kwargs) -> None: ...
    def __enter__(self) -> None: ...
    def __exit__(self, arg0: handle, arg1: handle, arg2: handle) -> None: ...

def setglfwdlhandle(arg0: int) -> None: ...
